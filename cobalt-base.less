// ------------------------------------------------------------
//
// Cobalt CSS Base.
//
// ------------------------------------------------------------


// ------------------------------------------------------------
// Break point tester
//
// Include: <div class="bp-tester"></div>
//
.bp-tester {
	&:after {
		position: fixed;
		bottom: 0px;
		left: 0;
		height: 20px;
		width: 100%;
		content: "";
		padding: 10px;
		text-align: center;
		
		@media screen and (max-width: @bp1) {
			background: red;
			content: "1000px @BP1";
		}
		@media screen and (max-width: @bp2) {
			background: orange;
			content: "900px @BP2";
		}
		@media screen and (max-width: @bp3) {
			background: gold;
			content: "800px @BP3";
		}
		@media screen and (max-width: @bp4) {
			background: green;
			content: "700px @BP4";
		}
		@media screen and (max-width: @bp5) {
			background: blue;
			content: "600px @BP5";
		}
		@media screen and (max-width: @bp6) {
			background: purple;
			content: "500px @BP6";
		}
		@media screen and (max-width: @bp7) {
			background: pink;
			content: "400px @BP7";
		}
	}
}
//
// BP TESTER


// Root Elements
// ------------------------------------------------------------
//

html {
	min-width: 320px;
}

body {
    background:  @body-bg;
    .default-font();
}

// Wrappers
// ------------------------------------------------------------
//
.wrapper() {
	width: 1000px;
	margin: 0 auto;
	
	// Mobile Wrapper
	@media screen and (max-width: @bp1) {
		width: auto; 
		margin: 0 15px; 
	}

} // wrapper


// ------------------------------------------------------------
// Links
// ------------------------------------------------------------
//
a { 
    color: #fff; text-decoration: none; 
    border: 0;
    outline: none;
    .fade-links(0.25s);
}
a:hover    { color: @cobalt-blue; }
*:focus    { outline: none; }
*:invalid  { outline: none; box-shadow: none; }


// ------------------------------------------------------------
// Images
// ------------------------------------------------------------
//
.img-rounded(@radius: 4px) {
	.border-radius(@radius);
}

.img-circle() {
	.border-radius(50%);
}
// @size small || medium || large
.img-polaroid(@size) {

	.padding-size() when (@size = small) {
		padding: 4px;
	}
	.padding-size() when (@size = medium) {
		padding: 7px;
	}
	.padding-size() when (@size = large) {
		padding: 15px;
	}
	
	.padding-size;
	background: @white;
	.border(@vlight-grey);
	
	
} // img-polaroid

// ------------------------------------------------------------
// Vertical & Horizontal Tabs
// ------------------------------------------------------------
//
[tabs], [vtabs] {
    margin-bottom: 20px;
    .contain-floats;

    // Selected tab indicator
    > input { display: none; }
    
    // tab buttons
    > [nav] label {
        .border(#b3b3b3);
        .gradient(#f2f4f6, #dbe0e2);
        .inner-highlight(#fff);
        padding: 10px 20px;
        font-weight: bold;
        
        &:hover {
            cursor: pointer;
            .gradient(#f2f4f6, darken(#dbe0e2, 5%));
        }
    }

    // Selected Tab Button
    > input:checked:nth-child(1) ~ [nav] > label:nth-child(1),
    > input:checked:nth-child(2) ~ [nav] > label:nth-child(2),
    > input:checked:nth-child(3) ~ [nav] > label:nth-child(3),
    > input:checked:nth-child(4) ~ [nav] > label:nth-child(4),
    > input:checked:nth-child(5) ~ [nav] > label:nth-child(5),
    > input:checked:nth-child(6) ~ [nav] > label:nth-child(6),
    > input:checked:nth-child(7) ~ [nav] > label:nth-child(7) {
        .gradient(darken(#f2f4f6, 5%), darken(#dbe0e2, 8%));
        .active-shadow(#dbe0e2);
        .border(darken(#b3b3b3, 10%));
    }
    
    // tab content containers
    > [content] > div {
        display: none;
        padding: 10px;
    }

    // selected tab content container
    > input:checked:nth-child(1) ~ [content] > div:nth-child(1),
    > input:checked:nth-child(2) ~ [content] > div:nth-child(2),
    > input:checked:nth-child(3) ~ [content] > div:nth-child(3),
    > input:checked:nth-child(4) ~ [content] > div:nth-child(4),
    > input:checked:nth-child(5) ~ [content] > div:nth-child(5),
    > input:checked:nth-child(6) ~ [content] > div:nth-child(6),
    > input:checked:nth-child(7) ~ [content] > div:nth-child(7) {
        display: block;
    }

} // [tabs], [vtabs]

// Horizontal tabs
[tabs] {
    > [nav] label {
        float: left;
        .border-radius-top();
    }
    
    > [nav] label + label {
         margin-left: 6px;
     }

    > [content] {
        
        > div {
            float: left;
            width: 100%;
            .border(#b3b3b3);
            margin-top: -1px;
        }
    }
}

// Vertical tabs
[vtabs] {
    //.border(#b3b3b3);
    border-left: none;
    
    > [nav] {
        float: left;
        
        > label {
            display: block;
            .border-radius-left();
        }
        
        > label + label {
            border-top: none !important;
        }
    
    } // > [nav]

    > [content] {
        overflow: hidden;
    }
}

// ------------------------------------------------------------
// Buttons
// ------------------------------------------------------------
//
// Params: 
// @size: very-small || [small] || medium || large || huge
// @color: [default] || red || green || blue || yellow || dark || Custom HEX
// @rounded: true || [false]
// 
.btn(@size: small, @color: default, @rounded: false) {
    
    // ----------------------------------------
    // Set button's border-radius
    .is-rounded() when (@rounded) {
        .border-radius(50px);
    }
    .is-rounded() when not (@rounded) {
        .border-radius(4px);
    }
    
    // ----------------------------------------
    // Set button size
    .padding-size() when (@size = very-small) {
        padding: 5px 8px;
    }
    .padding-size() when (@size = small) {
        padding: 8px 12px;
    }
    .padding-size() when (@size = medium) {
        padding: 12px 22px;
    }
    .padding-size() when (@size = large) {
        padding: 15px 40px;
        font-size: @base-font-size + 5;
    }
    .padding-size() when (@size = huge) {
        padding: 30px 80px;
        font-size: @base-font-size + 10;
    }
    
    // ----------------------------------------
    // Button colors
    //
    // Params: @lightcolor @darkcolor @highlight @border @font: light || [dark]
    //
    .btn-styles(
        @lightcolor: #f0f3f4, @darkcolor: #dce1e3, @highlight: @white, 
        @border: #c0c6c9, @font: dark) {
    
        .gradient(@lightcolor, @darkcolor);
        .inner-highlight(@highlight);
        .border(@border);
        .fade-links(.25s);
        
        .color() when (@font = dark) {
            color: darken(@darkcolor, 30%);
        }
        .color() when (@font = light) {
            color: @white;
        }
        .color();
        
        &:hover {
            .gradient(@lightcolor, darken(@darkcolor, 5%));
            .border(darken(@border, 10%));
            
            .color() when (@font = dark) {
                color: darken(@darkcolor, 40%);
            }
            .color() when (@font = light) {
                color: @white;
            }
            .color();
        
        } // &:hover
        
        &:active {
            .gradient(darken(@lightcolor, 3%), darken(@darkcolor, 8%));
            .active-shadow(@darkcolor);
        
        } // &:active
        
    } // btn-styles()
    
    .btn-color() {
        @lightcolor: lighten(@color, 5%);
        @darkcolor:  darken(@color, 15%);
        @highlight:  lighten(@color, 20%);
        @border:     darken(@color, 30%);
        
        .btn-styles(@lightcolor, @darkcolor, @highlight, @border, light);
    }
    
    .btn-color() when (@color = default) { .btn-styles(); }
    .btn-color() when (@color = red)     { .btn-styles(#e75646, #c9392a, #f88d81, #940f01, light); }
    .btn-color() when (@color = green)   { .btn-styles(#2fc983, #259c65, #80dcb2, #2c9163, light); }
    .btn-color() when (@color = blue)    { .btn-styles(#6bb3e9, #267c9c, #96d2f1, #157294, light); }
    .btn-color() when (@color = yellow)  { .btn-styles(#fbd256, #e8ab18, #ffebb4, #cd8c00, light); }
    .btn-color() when (@color = dark)    { .btn-styles(#586570, #40484d, #74899a, #000, light); }
    
    // Set everything.
    display: inline-block;
    .is-rounded; 
    .padding-size;
    .btn-color;

} // btn()



