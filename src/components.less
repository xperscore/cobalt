// ------------------------------------------------------------
//
// Cobalt CSS Base.
//
// ------------------------------------------------------------


// ------------------------------------------------------------
// Break point tester
//
// Include: <div bp-tester></div>
//
[bp-tester] {
	&:after {
		position: fixed;
		bottom: 0px;
		left: 0;
		height: 20px;
		width: 100%;
		content: "";
		padding: 10px;
		text-align: center;
		
		@media screen and (max-width: @bp1) {
			background: red;
			content: "1000px @BP1";
		}
		@media screen and (max-width: @bp2) {
			background: orange;
			content: "900px @BP2";
		}
		@media screen and (max-width: @bp3) {
			background: gold;
			content: "800px @BP3";
		}
		@media screen and (max-width: @bp4) {
			background: green;
			content: "700px @BP4";
		}
		@media screen and (max-width: @bp5) {
			background: blue;
			content: "600px @BP5";
		}
		@media screen and (max-width: @bp6) {
			background: purple;
			content: "500px @BP6";
		}
		@media screen and (max-width: @bp7) {
			background: pink;
			content: "400px @BP7";
		}
	}
}
//
// BP TESTER


// Root Elements
// ------------------------------------------------------------
//

html {
	min-width: 320px;
}

body {
    background:  @body-bg;
    .default-font();
}

// ------------------------------------------------------------
// Links
// ------------------------------------------------------------
//
a { 
    color: #fff; text-decoration: none; 
    border: 0;
    outline: none;
    .fade-links(0.25s);
}
a:hover    { color: @cobalt-blue; }
*:focus    { outline: none; }
*:invalid  { outline: none; box-shadow: none; }


// ------------------------------------------------------------
// Images
// ------------------------------------------------------------
//
.img-rounded(@radius: 4px) {
	.border-radius(@radius);
}

.img-circle() {
	.border-radius(50%);
}
// @size small || medium || large
.img-polaroid(@size) {

	.padding-size() when (@size = small) {
		padding: 4px;
	}
	.padding-size() when (@size = medium) {
		padding: 7px;
	}
	.padding-size() when (@size = large) {
		padding: 15px;
	}
	
	.padding-size;
	background: @white;
	.border(@vlight-grey);
	
	
} // img-polaroid

// ------------------------------------------------------------
// Vertical & Horizontal Tabs
// ------------------------------------------------------------
//
[tabs], [vtabs] {
    margin-bottom: 20px;
    .contain-floats;

    // Selected tab indicator
    > input { display: none; }
    
    // tab buttons
    > nav label {
        cursor: pointer;
        .border;
        padding: 10px 20px;
        .customize('tab-btn');
        
        &:hover {
            .customize('tab-btn:hover');
        }
    }
    
    // tab content containers
    > [content] > div {
        display: none;
    }
    
    // selected tab button
    .sel-tab-btn(@idx) { > input:checked:nth-child(@{idx}) ~ nav > label:nth-child(@{idx}) {
        .customize('tab-btn:active');
    } }

    // selected tab content container
    .sel-tab-cont(@idx) { > input:checked:nth-child(@{idx}) ~ [content] > div:nth-child(@{idx}) {
        display: block;
    } }

    // enumerate tab selectablility
    .selectable(@idx) when (@idx > 0) {
        .sel-tab-btn(@idx);
        .sel-tab-cont(@idx);
        .selectable((@idx - 1));
    }

    // allow up to 10 tabs
    .selectable(10);
    
} // [tabs], [vtabs]

.wireframe('tab-btn:active') {
    background: lightgray;
}

// Horizontal tabs
[tabs] {
    > nav label {
        float: left;
        .border-radius-top();
    }
    
    > nav label + label {
         margin-left: 6px;
     }

    > [content] {
        
        > div {
            float: left;
            width: 100%;
            margin-top: -1px;
            .border(#b3b3b3);
        }
    }
}

// Vertical tabs
[vtabs] {
    .border(#b3b3b3);
    .border-radius-left;
    border-left: none;
    
    > nav {
        float: left;
        margin-top: -1px;
        margin-bottom: -1px;
        
        > label {
            display: block;

            + label {
                border-top: none !important;
            }

            &:first-child {
                .border-radius-top-left;
            }

            &:last-child {
                .border-radius-bottom-left;
            }
        }
    
    } // > nav

    > [content] {
        overflow: hidden;
    }
}

// ------------------------------------------------------------
// Site Nav
// ------------------------------------------------------------
//

[site-nav] {
    .contain-floats;

    // nav links.
    > * {
        padding: 3px 20px;
        text-decoration: none;
        float: left;
        margin-right: 10px;
        &:last-child {
            margin-right: 0;
        }
    }

    @media screen and (max-width: @bp6) {
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        overflow: hidden;
        width: 0;
        -webkit-transition: 0.3s width;

        // nav links.
        > * {
            float: none;
            display: block;
        }
    }
}

#site-nav-toggle {
    display: none;
}

// site nav button in responsive mode
label[for=site-nav-toggle] {
    display: none;
    cursor: pointer;
    .border(lightgray);
    .border-radius;
    padding: 3px 5px 1px;

    &:before {
        .icon-menu;
    }
}

@media screen and (max-width: @bp6) {
    label[for=site-nav-toggle] {
        display: inline-block;
    }
    
    // site-nav expanded
    #site-nav-toggle {
        ~ * [fixed-width], ~ [fixed-width] {
            -webkit-transition: 0.3s margin-left;
        }

        &:checked {
            ~ * [site-nav] {
                display: block;
                width: 125px;
            }
            ~ * > [fixed-width], ~ [fixed-width] {
                margin-left: 140px;
            }
        }
    }
}

// ----------------------------------------
// Button styles
// ----------------------------------------
//
// Params: @lightcolor @darkcolor @highlight @border @font: light || [dark]
//
.btn-styles(
    @lightcolor: #f0f3f4, @darkcolor: #dce1e3, @highlight: @white, 
    @border: #c0c6c9, @font: dark) {

    .gradient(@lightcolor, @darkcolor);
    .inner-highlight(@highlight);
    border-color: @border;
    .fade-links(.25s);
    
    .color() when (@font = dark) {
        color: darken(@darkcolor, 30%);
    }
    .color() when (@font = light) {
        color: @white;
    }
    .color();
    
    &:hover {
        .gradient(@lightcolor, darken(@darkcolor, 5%));
        border-color: darken(@border, 10%);
        
        .color() when (@font = dark) {
            color: darken(@darkcolor, 40%);
        }
        .color() when (@font = light) {
            color: @white;
        }
        .color();
    
    } // &:hover
    
    &:active {
        .gradient(darken(@lightcolor, 3%), darken(@darkcolor, 8%));
        .active-shadow(@darkcolor);
    
    } // &:active
    
} // btn-styles()
    
// ----------------------------------------
// Button color
// ----------------------------------------
// 
// This is a simpler version of .btn-styles
//
// Params:
// @color: [default] || red || green || blue || yellow || dark || Custom HEX
// 
.btn-color(@color: default) {
    .style() when (iscolor(@color)) {
        @lightcolor: lighten(@color, 5%);
        @darkcolor:  darken(@color, 15%);
        @highlight:  lighten(@color, 20%);
        @border:     darken(@color, 30%);
        
        .btn-styles(@lightcolor, @darkcolor, @highlight, @border, light);
    }

    .style() when (@color = default) { .btn-styles(); }
    .style() when (@color = red)     { .btn-styles(#e75646, #c9392a, #f88d81, #940f01, light); }
    .style() when (@color = green)   { .btn-styles(#2fc983, #259c65, #80dcb2, #2c9163, light); }
    .style() when (@color = blue)    { .btn-styles(#6bb3e9, #267c9c, #96d2f1, #157294, light); }
    .style() when (@color = yellow)  { .btn-styles(#fbd256, #e8ab18, #ffebb4, #cd8c00, light); }
    .style() when (@color = dark)    { .btn-styles(#586570, #40484d, #74899a, #000, light); }

    .style;
}
    

// ------------------------------------------------------------
// Buttons
// ------------------------------------------------------------
//
// Params: 
// @size: very-small || [small] || medium || large || huge
// @rounded: true || [false]
// @color: [notset] || lightgray || red || green || blue || yellow || dark || Custom HEX
// 
.btn(@size: small, @rounded: false, @color: notset) {
    
    // ----------------------------------------
    // Set button's border-radius
    .is-rounded() when (@rounded) {
        .border-radius(50px);
    }
    .is-rounded() when not (@rounded) {
        .border-radius(4px);
    }
    
    // ----------------------------------------
    // Set button size
    .padding-size() when (@size = very-small) {
        padding: 5px 8px;
    }
    .padding-size() when (@size = small) {
        padding: 8px 12px;
    }
    .padding-size() when (@size = medium) {
        padding: 12px 22px;
    }
    .padding-size() when (@size = large) {
        padding: 15px 40px;
        font-size: @base-font-size + 5;
    }
    .padding-size() when (@size = huge) {
        padding: 30px 80px;
        font-size: @base-font-size + 10;
    }

    .color() { }
    .color() when not (@color = notset) {
        .btn-color(@color);
    }

    // default background transparent
    background: transparent;
    
    // Set everything.
    display: inline-block;
    .border;
    .is-rounded; 
    .padding-size;

    // Customize *before* color so that immediate color can override
    .customize('btn');

    .color;

} // btn()


